package fr.umlv.ir.dingo.tools;

import fr.umlv.ir.dingo.tools.TerminalAttributeEvaluator;
import fr.umlv.ir.dingo.tree.Identifier;
import fr.umlv.ir.dingo.tree.NumericValue;

public interface TerminalAttributeEvaluator {
  public void space(CharSequence seq);
  public void comment(CharSequence seq);
  public NumericValue numberValue(CharSequence seq);
  public String stringValue(CharSequence seq);
  public void string_type(CharSequence seq);
  public void numeric_type(CharSequence seq);
  public void function_type(CharSequence seq);
  public void object_type(CharSequence seq);
  public void array_type(CharSequence seq);
  public Identifier identifier(CharSequence seq);
  public void numeric_identifier(CharSequence seq);
  public void string_identifier(CharSequence seq);
  public void plus(CharSequence seq);
  public void minus(CharSequence seq);
  public void star(CharSequence seq);
  public void div(CharSequence seq);
  public void equals(CharSequence seq);
  public void notEquals(CharSequence seq);
  public void sup(CharSequence seq);
  public void inf(CharSequence seq);
  public void l_shift(CharSequence seq);
  public void r_shift(CharSequence seq);
  public void modulo(CharSequence seq);
  public void not(CharSequence seq);
  public void and(CharSequence seq);
  public void or(CharSequence seq);
  public void semicolon(CharSequence seq);
  public void lpar(CharSequence seq);
  public void rpar(CharSequence seq);
  public void l_brace(CharSequence seq);
  public void r_brace(CharSequence seq);
  public void dot(CharSequence seq);
  public void comma(CharSequence seq);
  public void eoln(CharSequence seq);
  public void dingo(CharSequence seq);
  public void args(CharSequence seq);
  public void def(CharSequence seq);
  public void _var(CharSequence seq);
  public void _return(CharSequence seq);
  public void _if(CharSequence seq);
  public void _else(CharSequence seq);
  public void _for(CharSequence seq);
  public void _foreach(CharSequence seq);
  public void _in(CharSequence seq);
  public void forever(CharSequence seq);
  public void _break(CharSequence seq);
  public void _continue(CharSequence seq);
  public void print(CharSequence seq);
  public void println(CharSequence seq);
  public void _null(CharSequence seq);
  public void gui(CharSequence seq);
  public void _void(CharSequence seq);
}
