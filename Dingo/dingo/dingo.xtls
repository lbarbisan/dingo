<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE tools SYSTEM "tools.dtd">
<tools>
 <rule id="plus" terminal="plus"/>
 <rule id="star" terminal="star"/>
 <rule id="divide" terminal="divide"/>
 <rule id="minus" terminal="minus" />
 <rule id="modulo" terminal="modulo"/>
 <rule id="equals" terminal="equals"/>
 <rule id="superior" terminal="superior"/>
 <rule id="inferior" terminal="inferior"/>
 <rule id="notEquals" terminal="notEquals"/>
 <rule id="not" terminal="not"/>
 <rule id="and" terminal="and"/>
 <rule id="or" terminal="or"/>
 <rule id="dingo" terminal="dingo"/>
 <rule id="def" terminal="def"/>
 <rule id="If" terminal="If"/>
 <rule id="Else" terminal="Else"/>
 <rule id="For" terminal="For"/>
 <rule id="foreach" terminal="foreach"/>
 <rule id="in" terminal="in"/>
 <rule id="forever" terminal="forever"/>
 <rule id="Break" terminal="Break"/>
 <rule id="Continue" terminal="Continue"/>
 <rule id="print" terminal="print"/>
 <rule id="println" terminal="println"/>
 <rule id="gui" terminal="gui"/>
 <rule id="numberValue" terminal="numberValue"/>
 <rule id="stringValue" terminal="stringValue"/>
 <rule id="StringType" terminal="StringType"/>
 <rule id="NumericType" terminal="NumericType"/>
 <rule id="FunctionType" terminal="FunctionType"/> 
 <rule id="ObjectType" terminal="ObjectType"/>
 <rule id="semicolon" terminal="semicolon"/>
 <rule id="eoln" discard="true"/>
 <rule id="commentaire" discard="true"/>
 <rule id="rpar" terminal="rpar"/>
 <rule id="lpar" terminal="lpar"/>
 <rule id="lacco" terminal="lacco"/>
 <rule id="racco" terminal="racco"/>
 <rule id="variable" terminal="variable"/>
 <rule id="numericVariable" terminal="numericVariable"/>
 <rule id="stringVariable" terminal="stringVariable"/>
 <rule id="dot" terminal="dot"/>
 <rule id="comma" terminal="comma"/>
 <rule id="Return" terminal="Return"/>
 <rule id="space" discard="true"/>
 <rule id="var" terminal="var"/>
 <rule id="name" terminal="name"/>
 <rule id="Void" terminal="Void"/>

 <import type="java.math.BigDecimal"/>
 <import type="fr.umlv.dingo.tree.Instruction"/>
 <import type="fr.umlv.dingo.tree.DefinitionExpr"/>
 <import type="fr.umlv.dingo.tree.Program"/>
 <import type="fr.umlv.dingo.tree.Ident"/>
 <import type="fr.umlv.dingo.tree.Expr"/>
 <import type="fr.umlv.dingo.tree.NumericExpr"/>
 <import type="fr.umlv.dingo.tree.StringExpr"/>
 <import type="fr.umlv.dingo.tree.BooleanExpr"/>
 <import type="fr.umlv.dingo.tree.StringValue"/>
 <import type="fr.umlv.dingo.tree.NumericValue"/>
 <import type="fr.umlv.dingo.tree.BooleanValue"/>
 <import type="fr.umlv.dingo.tree.Initialization"/>
 <import type="fr.umlv.dingo.tree.Params"/>
 <import type="fr.umlv.dingo.tree.Param"/>
 <import type="fr.umlv.dingo.tree.Function"/>
 <import type="fr.umlv.dingo.tree.FunctionCall"/>
 <import type="fr.umlv.dingo.tree.Args"/>
 
 <terminal id="numberValue" type="NumericValue"/>
 <terminal id="stringValue" type="StringValue"/>
 <terminal id="booleanValue" type="BooleanValue"/>
 <terminal id="variable" type="Ident"/>
 <terminal id="stringVariable" type="Ident"/>
 <terminal id="numericVariable" type="Ident"/>

 

 <non-terminal id="instruction" type="Instruction"/>
 <non-terminal id="definitionExpr" type="DefinitionExpr"/>
 <non-terminal id="program" type="Program"/>
 <non-terminal id="StringExpr" type="StringExpr"/>
 <non-terminal id="NumericExpr" type="NumericExpr"/> 
 <non-terminal id="booleanExpr" type="BooleanExpr"/>
 <non-terminal id="expr" type="Expr"/>
 <non-terminal id="initialization" type="Initialization"/>
 <non-terminal id="function" type="Function"/>
 <non-terminal id="params" type="Params"/>
 <non-terminal id="param" type="Param"/>
 <non-terminal id="functionCall" type="FunctionCall"/>
 <non-terminal id="args" type="Args"/>
 <non-terminal id="arg" type="Expr"/>
 <non-terminal id="type" type="String"/>
</tools>